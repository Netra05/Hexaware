--CREATE DATABASE JOIN_TASK;
USE JOIN_TASK;

/*CREATE TABLE salesman (
    salesman_id INT PRIMARY KEY,
    name VARCHAR(50),
    city VARCHAR(50),
    commission DECIMAL(4,2)
);*/

/*INSERT INTO salesman VALUES 
(5001, 'James Hoog', 'New York', 0.15),
(5002, 'Nail Knite', 'Paris', 0.13),
(5005, 'Pit Alex', 'London', 0.11),
(5006, 'Mc Lyon', 'Paris', 0.14),
(5007, 'Paul Adam', 'Rome', 0.13),
(5003, 'Lauson Hen', 'San Jose', 0.12);*/

/*CREATE TABLE customer (
    customer_id INT PRIMARY KEY,
    cust_name VARCHAR(50),
    city VARCHAR(50),
    grade INT,
    salesman_id INT,
    FOREIGN KEY (salesman_id) REFERENCES salesman(salesman_id)
);*/

/*INSERT INTO customer VALUES 
(3002, 'Nick Rimando', 'New York', 100, 5001),
(3007, 'Brad Davis', 'New York', 200, 5001),
(3005, 'Graham Zusi', 'California', 200, 5002),
(3008, 'Julian Green', 'London', 300, 5002),
(3004, 'Fabian Johnson', 'Paris', 300, 5006),
(3009, 'Geoff Cameron', 'Berlin', 100, 5003),
(3003, 'Jozy Altidor', 'Moscow', 200, 5007),
(3001, 'Brad Guzan', 'London', NULL, 5005);*/

/*CREATE TABLE orders (
    ord_no INT PRIMARY KEY,
    purch_amt DECIMAL(10,2),
    ord_date DATE,
    customer_id INT,
    salesman_id INT,
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
    FOREIGN KEY (salesman_id) REFERENCES salesman(salesman_id)
);*/

/*INSERT INTO orders VALUES 
(70001, 150.5, '2012-10-05', 3005, 5002),
(70009, 270.65, '2012-09-10', 3001, 5005),
(70002, 65.26, '2012-10-05', 3002, 5001),
(70004, 110.5, '2012-08-17', 3009, 5003),
(70007, 948.5, '2012-09-10', 3005, 5002),
(70005, 2400.6, '2012-07-27', 3007, 5001),
(70008, 5760, '2012-09-10', 3002, 5001),
(70010, 1983.43, '2012-10-10', 3004, 5006);*/

--Q1
/*select s.name,c.cust_name,s.city from salesman s JOIN
customer c on s.city=c.city;*/

--Q2
/*SELECT o.ord_no, o.purch_amt, c.cust_name, c.city
FROM orders o
JOIN customer c ON o.customer_id = c.customer_id
WHERE o.purch_amt BETWEEN 500 AND 2000;*/

--Q3
/*SELECT c.cust_name, c.city, s.name AS Salesman, s.commission
FROM customer c
JOIN salesman s ON c.salesman_id = s.salesman_id;*/

--Q4
/*SELECT c.cust_name, c.city AS customer_city, s.name AS Salesman, s.commission
FROM customer c
JOIN salesman s ON c.salesman_id = s.salesman_id
WHERE s.commission > 0.12;*/

--Q5
/*SELECT c.cust_name, c.city AS customer_city, s.name AS Salesman, s.city AS salesman_city, s.commission
FROM customer c
JOIN salesman s ON c.salesman_id = s.salesman_id
WHERE s.city <> c.city AND s.commission > 0.12;*/

--Q6
/*SELECT o.ord_no, o.ord_date, o.purch_amt, c.cust_name, c.grade, s.name AS Salesman, s.commission
FROM orders o
JOIN customer c ON o.customer_id = c.customer_id
JOIN salesman s ON o.salesman_id = s.salesman_id;*/

--Q7
/*SELECT o.ord_no, o.purch_amt, o.ord_date, c.cust_name, c.city, c.grade, s.name AS Salesman, s.city AS salesman_city, s.commission
FROM orders o
JOIN customer c ON o.customer_id = c.customer_id
JOIN salesman s ON o.salesman_id = s.salesman_id;*/

--Q8
/*SELECT c.cust_name, c.city AS customer_city, c.grade, 
       s.name AS salesman, s.city AS salesman_city
FROM customer c
JOIN salesman s ON c.salesman_id = s.salesman_id
ORDER BY c.customer_id;*/

--Q9
/*SELECT c.cust_name, c.city AS customer_city, c.grade, 
       s.name AS salesman, s.city AS salesman_city
FROM customer c
JOIN salesman s ON c.salesman_id = s.salesman_id
WHERE c.grade < 300
ORDER BY c.customer_id;*/

--Q10
/*SELECT c.cust_name, c.city, o.ord_no, o.ord_date, o.purch_amt
FROM customer c
LEFT JOIN orders o ON c.customer_id = o.customer_id
ORDER BY o.ord_date;*/

--Q11
/*SELECT c.cust_name, c.city, o.ord_no, o.ord_date, o.purch_amt,
       s.name AS salesman, s.commission
FROM customer c
LEFT JOIN orders o ON c.customer_id = o.customer_id
LEFT JOIN salesman s ON c.salesman_id = s.salesman_id
ORDER BY o.ord_date;*/

--Q12
/*SELECT s.salesman_id, s.name, s.city, s.commission
FROM salesman s
LEFT JOIN customer c ON s.salesman_id = c.salesman_id
ORDER BY s.salesman_id;*/

--Q13
/*SELECT s.name AS salesman, c.cust_name, c.city, c.grade, o.ord_no, o.ord_date, o.purch_amt
FROM salesman s
LEFT JOIN customer c ON s.salesman_id = c.salesman_id
LEFT JOIN orders o ON c.customer_id = o.customer_id
ORDER BY s.salesman_id;*/

--Q14
/*SELECT DISTINCT s.salesman_id, s.name AS salesman, s.city AS salesman_city, s.commission
FROM salesman s
LEFT JOIN customer c ON s.salesman_id = c.salesman_id
LEFT JOIN orders o ON c.customer_id = o.customer_id
WHERE (o.purch_amt >= 2000 AND c.grade IS NOT NULL) OR o.customer_id IS NULL;*/


--Q15
/*SELECT c.cust_name, c.city, o.ord_no, o.ord_date, o.purch_amt
FROM customer c
RIGHT JOIN orders o ON c.customer_id = o.customer_id;*/

--Q16
/*SELECT c.cust_name, c.city, o.ord_no, o.ord_date, o.purch_amt
FROM customer c
JOIN orders o ON c.customer_id = o.customer_id
WHERE (c.grade IS NOT NULL) OR (c.customer_id IS NULL AND c.grade IS NULL);*/

--Q17
/*SELECT s.name AS salesman, s.city AS salesman_city, c.cust_name, c.city AS customer_city
FROM salesman s
CROSS JOIN customer c;*/

--Q18
/*SELECT s.name AS salesman, s.city AS salesman_city, c.cust_name, c.city AS customer_city
FROM salesman s
CROSS JOIN customer c
WHERE s.city = c.city;*/

--Q19
/*SELECT s.name AS salesman, s.city AS salesman_city, c.cust_name, c.city AS customer_city, c.grade
FROM salesman s
CROSS JOIN customer c
WHERE s.city IS NOT NULL AND c.grade IS NOT NULL;*/

--Q20
/*SELECT s.name AS salesman, s.city AS salesman_city, c.cust_name, c.city AS customer_city, c.grade
FROM salesman s
CROSS JOIN customer c
WHERE s.city <> c.city AND c.grade IS NOT NULL;*/


/*CREATE TABLE company_mast (
    COM_ID INT PRIMARY KEY,
    COM_NAME VARCHAR(50)
);*/

/*INSERT INTO company_mast (COM_ID, COM_NAME) VALUES
(11, 'Samsung'),
(12, 'iBall'),
(13, 'Epsion'),
(14, 'Zebronics'),
(15, 'Asus'),
(16, 'Frontech');*/

/*CREATE TABLE item_mast (
    PRO_ID INT PRIMARY KEY,
    PRO_NAME VARCHAR(50),
    PRO_PRICE DECIMAL(10,2),
    PRO_COM INT,
    FOREIGN KEY (PRO_COM) REFERENCES company_mast(COM_ID)
);*/

/*INSERT INTO item_mast (PRO_ID, PRO_NAME, PRO_PRICE, PRO_COM) VALUES
(101, 'Mother Board', 3200.00, 15),
(102, 'Key Board', 450.00, 16),
(103, 'ZIP drive', 250.00, 14),
(104, 'Speaker', 550.00, 16),
(105, 'Monitor', 5000.00, 11),
(106, 'DVD drive', 900.00, 12),
(107, 'CD drive', 800.00, 12),
(108, 'Printer', 2600.00, 13),
(109, 'Refill cartridge', 350.00, 13),
(110, 'Mouse', 250.00, 12);*/

--Q21
/*SELECT * FROM item_mast 
JOIN company_mast ON item_mast.PRO_COM = company_mast.COM_ID;*/

--Q22
/*SELECT item_mast.PRO_NAME, item_mast.PRO_PRICE, company_mast.COM_NAME 
FROM item_mast 
JOIN company_mast ON item_mast.PRO_COM = company_mast.COM_ID;*/

--Q23
/*SELECT company_mast.COM_NAME, AVG(item_mast.PRO_PRICE) AS AVG_PRICE 
FROM item_mast 
JOIN company_mast ON item_mast.PRO_COM = company_mast.COM_ID 
GROUP BY company_mast.COM_NAME;*/

--Q24
/*SELECT company_mast.COM_NAME, AVG(item_mast.PRO_PRICE) AS AVG_PRICE 
FROM item_mast 
JOIN company_mast ON item_mast.PRO_COM = company_mast.COM_ID 
WHERE item_mast.PRO_PRICE >= 350 
GROUP BY company_mast.COM_NAME;*/

--Q25
/*SELECT item_mast.PRO_NAME, item_mast.PRO_PRICE, company_mast.COM_NAME 
FROM item_mast 
JOIN company_mast ON item_mast.PRO_COM = company_mast.COM_ID 
WHERE item_mast.PRO_PRICE = (SELECT MAX(PRO_PRICE) FROM item_mast WHERE PRO_COM = company_mast.COM_ID);*/

/*CREATE TABLE emp_department (
    DPT_CODE INT PRIMARY KEY,
    DPT_NAME VARCHAR(50),
    DPT_ALLOTMENT DECIMAL(10,2)
);*/

/*INSERT INTO emp_department (DPT_CODE, DPT_NAME, DPT_ALLOTMENT) VALUES
(57, 'IT', 65000),
(63, 'Finance', 15000),
(47, 'HR', 240000),
(27, 'RD', 55000),
(89, 'QC', 75000);
*/

/*CREATE TABLE emp_details (
    EMP_IDNO INT PRIMARY KEY,
    EMP_FNAME VARCHAR(50),
    EMP_LNAME VARCHAR(50),
    EMP_DEPT INT,
    FOREIGN KEY (EMP_DEPT) REFERENCES emp_department(DPT_CODE)
);*/

/*INSERT INTO emp_details VALUES
(127323, 'Michale', 'Robbin', 57),
(526689, 'Carlos', 'Snares', 63),
(843795, 'Enric', 'Dosio', 57),
(328717, 'Jhon', 'Snares', 63),
(444527, 'Joseph', 'Dosni', 47),
(659831, 'Zanifer', 'Emily', 47),
(847674, 'Kuleswar', 'Sitaraman', 57),
(748681, 'Henrey', 'Gabriel', 47),
(555935, 'Alex', 'Manuel', 57);*/

--Q26
/*SELECT * FROM emp_details 
JOIN emp_department ON emp_details.EMP_DEPT = emp_department.DPT_CODE;*/

--Q27
/*SELECT emp_details.EMP_FNAME, emp_details.EMP_LNAME, emp_department.DPT_NAME, emp_department.DPT_ALLOTMENT 
FROM emp_details 
JOIN emp_department ON emp_details.EMP_DEPT = emp_department.DPT_CODE;
*/

--Q28
/*SELECT emp_details.EMP_FNAME, emp_details.EMP_LNAME 
FROM emp_details 
JOIN emp_department ON emp_details.EMP_DEPT = emp_department.DPT_CODE 
WHERE emp_department.DPT_ALLOTMENT > 50000;*/

--Q29
/*SELECT emp_department.DPT_NAME 
FROM emp_department 
JOIN emp_details ON emp_department.DPT_CODE = emp_details.EMP_DEPT 
GROUP BY emp_department.DPT_NAME 
HAVING COUNT(emp_details.EMP_IDNO) > 2;*/
















